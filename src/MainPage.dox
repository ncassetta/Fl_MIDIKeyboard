/**
\mainpage
The Fl_MIDIKeyboard is a widget developed with FLTK GUI Toolkit (see <http://www.fltk.org>) by __Nicola Cassetta__.
(_ncassettaATtiscaliDOTit_).

It allows the user to incorporate into FLTK environment a piano keyboard capable to send MIDI messages to the computer
MIDI ports.

It includes these features:
- Horizontal or vertical keyboard
- Customizable range
- Variable ratio between white/black keys height and width
- Resizing and autoresizing of keys
- Scrolling with a scrollbar, with the arrow keys on the computer keyboard or with the mouse
- Playing with a mouse click on the keys or with the computer keyboard (this mode allows playing chords)
- Callbacks can be executed when a key is pressed or released
- Can send these MIDI messages: Note On/Off, Program change, Volume, Pan

The widget uses RtMidi library (see <http://www.music.mcgill.ca/~gary/rtmidi/> to communicate with the hardware of the computer
regardless of operating system. It consists of only one source file and two headers, so it has been incorporated into the source.

The features are shown in the sample programs test_Fl_MIDIKeyboard_hor.cpp and test_Fl_MIDIKeyboard_vert.cpp.

See the \ref building page for building the widget.

Sample programs pictures:
-------------------------

<img src="horizontal.PNG" width="401" height="313" alt="Test horizontal image" title="Test_FL_MIDIKeyboard_hor.cpp" align="middle" />

<img src="vertical.PNG" width="401" height="314" alt="test vertical image" title="Test_FL_MIDIKeyboard_vert.cpp" align="middle" />


Thanks Nicola Cassetta
**/

/** \page playing PLAYING WITH COMPUTER KEYBOARD.
When the press mode is MKB_PRESS_KEYS or MKB_PRESS_BOTH you can play the Fl_MIDIKeyboard with the computer keyboard.
This allows you to play chords (in the range of one octave).
Keys are ordered as follows (this is optimized for English keyboard layout):
- 'z' = C (default: middle C)
- 's' = C#
- 'x' = D
- 'd' = D#
- 'c' = E
- 'v' = F
- 'g' = F#
- 'b' = G
- 'h' = G#
- 'n' = A
- 'j' = A#
- 'm' = B
- ',' = C (upper octave)
- up arrow raise (and scroll) one octave
- down arrow lower (and scroll) one octave
\note The widget uses the FLTK events handling for playing, so it is not intended for realtime performance! There is an audible latency
between keypress and sound.
**/

/** \page building BUILDING THE WIDGET
I apologize I am not a professional coder, so only know how to work with Windows and Codeblocks (and only
tested the code with Windows). I really appreciate if someone could help me to test it under other OS and to develop
a correct BUILD section for the widget.

However, for building you have to compile the three files __src\\Fl_MIDIKeyboard.cpp__, __src\\MIDIDriver.cpp__ and
__src\\rtmidi-2.0.1\\RtMidi.cpp__ (this one contains the RtMidi library, you could also compile it separately)
and link with usual FLTK libraries.
Moreover, for building RtMidi, you must link with following libraries:

| OS                   | lib (or framework)   |
|----------------------|----------------------|
| LINUX with ALSA      | asound, pthread      |
| LINUX without ALSA   | jack                 |
| MAC OSX              | CoreMidi, CoreAudio, CoreFoundation |
| Windows (with MM)    | winmm (with multithreading) |


I slightly modified the file __src\\rtmidi-2.0.1\\RtMidi.h__ trying to auto recognize the OS by mean of compiler macros.
(this is done in __src\\Config.h__). If this doesnt work you can eliminate my edit in it and try to compile RtMidi
according to the instructions in their site <http://www.music.mcgill.ca/~gary/rtmidi/>.

Obviously you can compile the widget as a separate lib or incorporate it into FLTK. In the __test__ folder there are two sample programs showing its features 

Thanks

Nicola Cassetta
**/
